{
    "openapi": "3.0.0",
    "info": {
        "title": "A-POTAP API Documentation",
        "description": "Describe API methods for information",
        "contact": {
            "email": "a-potap@mail.ru"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://a-potap.test/api",
            "description": "A_POTAP API Server"
        }
    ],
    "paths": {
        "/blog": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "Get list of blog posts",
                "description": "Returns list of posts",
                "operationId": "getBlogList",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlogResource"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blog/{id}": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "Get blog post information",
                "description": "Returns blog post data",
                "operationId": "getBlogById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Blog id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Blog"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blog/{id}/comments": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "Get list of blog post comments",
                "description": "Returns list of comments",
                "operationId": "getBlogCommentsList",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Blog id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommentResource"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Blog"
                ],
                "summary": "Store post comment",
                "description": "Returns comment data",
                "operationId": "getBlogCommentsStore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Blog id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCommentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/news": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "Get list of news",
                "description": "Returns list of news",
                "operationId": "getNewsList",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NewsResource"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/news/{id}": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "Get news information",
                "description": "Returns news data",
                "operationId": "getNewsById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "News id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/News"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/photos": {
            "get": {
                "tags": [
                    "Photos"
                ],
                "summary": "Get list of photo albums",
                "description": "Returns list of albums",
                "operationId": "getPhotosList",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhotoResource"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/photos/{id}": {
            "get": {
                "tags": [
                    "Photos"
                ],
                "summary": "Get Photo Album with photos list",
                "description": "Get Photo Album with photos list",
                "operationId": "getPhotoAlbumById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Photo album id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhotoResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "NotFoundException": {
                "title": "NotFoundException",
                "description": "Not Found Exception data",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error text",
                        "type": "string",
                        "format": "string",
                        "example": "Record not found."
                    }
                },
                "type": "object",
                "xml": {
                    "name": "NotFoundException"
                }
            },
            "StoreCommentRequest": {
                "title": "Store Comment request",
                "description": "Store comment request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "iduser": {
                        "title": "User name",
                        "description": "User name or nickname",
                        "type": "string",
                        "example": "Guest"
                    },
                    "text": {
                        "title": "Comment text",
                        "description": "Comment or message from user",
                        "type": "string",
                        "example": "Some comment text"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "StoreCommentRequest"
                }
            },
            "BlogResource": {
                "title": "BlogResource",
                "description": "Blog resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Blog"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "BlogResource"
                }
            },
            "CommentResource": {
                "title": "Blog Comments Resource",
                "description": "Blog Comments Resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Comment"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CommentResource"
                }
            },
            "NewsResource": {
                "title": "NewsResource",
                "description": "News resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/News"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "NewsResource"
                }
            },
            "PhotoResource": {
                "title": "PhotoResource",
                "description": "Photo Resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Photo"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "PhotoResource"
                }
            },
            "Blog": {
                "title": "Blog",
                "description": "Blog model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "date": {
                        "title": "Date",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "title": {
                        "title": "Title",
                        "description": "Blog title",
                        "type": "string",
                        "example": "This is post title"
                    },
                    "title_en": {
                        "title": "Title EN",
                        "description": "Blog title  english version",
                        "type": "string",
                        "example": "This is post title"
                    },
                    "text": {
                        "title": "Text",
                        "description": "Post content text",
                        "type": "string",
                        "example": "Long text should be here"
                    },
                    "text_en": {
                        "title": "Text EN",
                        "description": "Post content text english version",
                        "type": "string",
                        "example": "Long text should be here"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Blog"
                }
            },
            "Comment": {
                "title": "Blog comments",
                "description": "Blog comments model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    },
                    "date": {
                        "title": "Date",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "user": {
                        "title": "User name",
                        "description": "User name or nickname",
                        "type": "string",
                        "example": "Guest"
                    },
                    "text": {
                        "title": "Comment text",
                        "description": "Comment or message from user",
                        "type": "string",
                        "example": "Some comment text"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Comment"
                }
            },
            "News": {
                "title": "News",
                "description": "News model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "date": {
                        "title": "Date",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "text": {
                        "title": "Text",
                        "description": "News text",
                        "type": "string",
                        "example": "Some news text"
                    },
                    "text_en": {
                        "title": "Text EN",
                        "description": "News text english version",
                        "type": "string",
                        "example": "TSome news text"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "News"
                }
            },
            "Photo": {
                "title": "Photo",
                "description": "Photo album model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "date_create": {
                        "title": "Date Create",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Album name",
                        "type": "string",
                        "example": "Some example name"
                    },
                    "name_en": {
                        "title": "Name EN",
                        "description": "Album name english version",
                        "type": "string",
                        "example": "Some example name"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Album description",
                        "type": "string",
                        "example": "Some description long text"
                    },
                    "description_en": {
                        "title": "Description EN",
                        "description": "Album description english version",
                        "type": "string",
                        "example": "Some description long text"
                    },
                    "cover": {
                        "title": "Cover",
                        "description": "Album cover image linc",
                        "type": "string",
                        "example": "https://a-potap.ru/albums/foto/lisbon/fase.JPG"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Photo"
                }
            }
        }
    },
    "tags": [
        {
            "name": "A-POTAP BLOG",
            "description": "API Endpoints of "
        }
    ]
}